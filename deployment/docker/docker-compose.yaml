version: "2.6"

services:
  scrapper-message-broker:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=mikhail21
      - RABBITMQ_DEFAULT_PASS=gameoftanks21
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
    ports:
      - 15672:15672
      - 5672:5672
    container_name: scrapper-message-broker
    volumes:
      - ../../rabbitmq/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always
    networks:
      - scrapper-network

  scrapper-db:
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ../../db/data:/data/db
    container_name: scrapper-db
    command: mongod
    healthcheck:
      test: mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    restart: always
    networks:
      - scrapper-network

  scrapper-service:
    build:
      context: ../../
      dockerfile: scrapper/Dockerfile
    image: mikhail21/scrapper-service:latest
    environment:
      - STAGE=dev # dev
      - SCRAPPER_DB_HOST=scrapper-db:27017
      - SCRAPPER_WORKER_HOST=scrapper-worker:4002
      - AMQP_HOST=rabbitmq
      - AMQP_USER=mikhail21
      - AMQP_PASSWORD=gameoftanks21
      - CHANNEL_EXCHANGE_NAME=SCRAPPER
      - CHANNEL_EXCHANGE_TYPE=direct
      - SCRAPPER_QUEUE=SCRAPPER_QUEUE
      - SCRAPPER_BINDING_KEY=afdg3t46gfdhgg3453tgdgaf
      - EVENT_SCRAPP_CANDIDATES=EVENT_SCRAPP_CANDIDATES
      - EVENT_SCRAPP_VACANCIES=EVENT_SCRAPP_VACANCIES
    volumes:
      - ../../scrapper:/usr/scrapper
      - ../../shared:/usr/shared
    ports:
      - 4000:4000
    container_name: scrapper-service
    healthcheck:
      test: curl -f localhost:4000/healthy
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      scrapper-db:
        condition: service_started
      scrapper-message-broker:
          condition: service_healthy
    networks:
      - scrapper-network

  scrapper-worker:
    build:
      context: ../../
      dockerfile: scrapperWorker/Dockerfile
    image: mikhail21/scrapper-worker:latest
    environment:
      - STAGE=dev # dev
      - AMQP_HOST=rabbitmq
      - AMQP_USER=mikhail21
      - AMQP_PASSWORD=gameoftanks21
      - CHANNEL_EXCHANGE_NAME=SCRAPPER
      - CHANNEL_EXCHANGE_TYPE=direct
      - SCRAPPER_QUEUE=SCRAPPER_QUEUE
      - SCRAPPER_BINDING_KEY=afdg3t46gfdhgg3453tgdgaf
      - EVENT_SCRAPP_CANDIDATES=EVENT_SCRAPP_CANDIDATES
      - EVENT_SCRAPP_VACANCIES=EVENT_SCRAPP_VACANCIES
    volumes:
      - ../../scrapperWorker:/usr/scrapperWorker
      - ../../shared:/usr/shared
    ports:
      - 4002:4002
    container_name: scrapper-worker
    healthcheck:
      test: curl -f localhost:4002/healthy
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      scrapper-service:
        condition: service_started
      scrapper-message-broker:
        condition: service_healthy
    networks:
      - scrapper-network

  scrapper-api:
    build:
      context: ../../
      dockerfile: api/Dockerfile
    image: mikhail21/scrapper-api:latest
    environment:
      - STAGE=dev # dev / prod
      - SCRAPPER_DB_HOST=scrapper-db:27017
    volumes:
      - ../../shared:/usr/shared
      - ../../api:/usr/api
    ports:
      - 4001:4001
    container_name: scrapper-api
    healthcheck:
      test: curl -f localhost:4001/healthy
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - scrapper-db
      - scrapper-service
    networks:
      - scrapper-network

  scrapper-client-dev:
    build:
      context: ../../client
      dockerfile: Dockerfile-dev # Dockerfile-dev
    image: mikhail21/scrapper-client-dev:latest
    ports:
      - 3000:3000
    volumes:
      - ../../shared:/usr/shared
      - ../../client:/usr/client
    container_name: scrapper-client-dev
    healthcheck:
      test: curl -f localhost:3000/healthy
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - scrapper-api
    networks:
      - scrapper-network

  scrapper-client-prod:
    build:
      context: ../../client
      dockerfile: Dockerfile-prod # Dockerfile-dev
    image: mikhail21/scrapper-client-prod:latest
    ports:
      - 8080:80
    container_name: scrapper-client-prod
    healthcheck:
      test: curl -f localhost:8080/healthy
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - scrapper-api
    stdin_open: true
    tty: true
    networks:
      - scrapper-network

networks:
  scrapper-network:
    driver: bridge
